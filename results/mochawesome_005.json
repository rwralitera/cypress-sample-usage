{
  "stats": {
    "suites": 11,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2020-10-01T22:13:10.970Z",
    "end": "2020-10-01T22:13:35.542Z",
    "duration": 24572,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "25309cb3-8d8f-4281-b79f-ef420eb90ccd",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\cypress_api.spec.js",
      "file": "cypress\\integration\\examples\\cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b0ad28a7-74ec-4c2a-a9fb-1a49ac0100f8",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 2832,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, function (subject, method) {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  // @ts-ignore TS7017\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n}); // @ts-ignore TS2339\ncy.get('button').console('info').then(function ($button) {// subject is still $button\n});",
              "err": {},
              "uuid": "044953d8-c520-4295-a59a-974b789b3a1a",
              "parentUUID": "b0ad28a7-74ec-4c2a-a9fb-1a49ac0100f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "044953d8-c520-4295-a59a-974b789b3a1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2832,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "684b7827-4e85-47b5-9123-c4e7a90dbe73",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 1154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "73207701-bd1a-4b3d-b41a-1efd7c0acf59",
              "parentUUID": "684b7827-4e85-47b5-9123-c4e7a90dbe73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "4452477a-91de-46b3-b188-c1f81d566ec4",
              "parentUUID": "684b7827-4e85-47b5-9123-c4e7a90dbe73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  whitelist: 'session_id'\n});",
              "err": {},
              "uuid": "7f705285-3099-4d8f-8061-ec9a01f12098",
              "parentUUID": "684b7827-4e85-47b5-9123-c4e7a90dbe73",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73207701-bd1a-4b3d-b41a-1efd7c0acf59",
            "4452477a-91de-46b3-b188-c1f81d566ec4",
            "7f705285-3099-4d8f-8061-ec9a01f12098"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2358,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9bf12b90-4612-4612-9f4f-0b7c4cd73c1c",
          "title": "Cypress.Server",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".defaults() - change default config of server",
              "fullTitle": "Cypress.Server .defaults() - change default config of server",
              "timedOut": null,
              "duration": 776,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Server.defaults({\n  delay: 0,\n  force404: false\n});",
              "err": {},
              "uuid": "b21bf054-2c40-4746-9d59-672ff18346ad",
              "parentUUID": "9bf12b90-4612-4612-9f4f-0b7c4cd73c1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b21bf054-2c40-4746-9d59-672ff18346ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 776,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4aa9f336-e695-4290-9879-da670c11d8fb",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 836,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "e95a582a-d778-4ce4-b6e2-364c52be8959",
              "parentUUID": "4aa9f336-e695-4290-9879-da670c11d8fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e95a582a-d778-4ce4-b6e2-364c52be8959"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 836,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a4ae4a92-2452-49e2-9840-170e2020f2e9",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 5189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nvar myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {},
              "uuid": "f82a4a48-455c-471d-aaed-006c35f0ef74",
              "parentUUID": "a4ae4a92-2452-49e2-9840-170e2020f2e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f82a4a48-455c-471d-aaed-006c35f0ef74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5189,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e3e598d1-ef5a-4298-b4b0-f119e187fe91",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 1739,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nvar visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be[\"true\"];\nexpect(Cypress.dom.isHidden(visibleP)).to.be[\"false\"];",
              "err": {},
              "uuid": "14314025-5dc0-416a-9ab3-a635cc5a55ca",
              "parentUUID": "e3e598d1-ef5a-4298-b4b0-f119e187fe91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14314025-5dc0-416a-9ab3-a635cc5a55ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1739,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64de4ef1-a853-4b02-a655-4d198581fd23",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 2356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "1b33bead-541d-42fa-aae8-c2aad4047a01",
              "parentUUID": "64de4ef1-a853-4b02-a655-4d198581fd23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b33bead-541d-42fa-aae8-c2aad4047a01"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2356,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "341c0063-9bba-41fb-a089-8ad0a11a372d",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 535,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "f0eea6c6-ea5c-47e7-9957-e68525fda954",
              "parentUUID": "341c0063-9bba-41fb-a089-8ad0a11a372d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0eea6c6-ea5c-47e7-9957-e68525fda954"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 535,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "233e4738-c5cb-4e7c-b4a4-222885d648b0",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 683,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "e0932a5c-4fcd-4baa-9458-0c24206d492a",
              "parentUUID": "233e4738-c5cb-4e7c-b4a4-222885d648b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0932a5c-4fcd-4baa-9458-0c24206d492a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 683,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e5b4a32c-24d0-4a02-a81e-07bc34793257",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 874,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "47fa9688-700f-4109-96bb-1aab44b29c8a",
              "parentUUID": "e5b4a32c-24d0-4a02-a81e-07bc34793257",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47fa9688-700f-4109-96bb-1aab44b29c8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 874,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "acfdaf37-2148-43d5-8459-c20747a058f5",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 2375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "5e3a17d5-7664-4362-896e-14ff2156f23e",
              "parentUUID": "acfdaf37-2148-43d5-8459-c20747a058f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e3a17d5-7664-4362-896e-14ff2156f23e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}